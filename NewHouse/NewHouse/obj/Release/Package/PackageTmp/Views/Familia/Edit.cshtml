@model NewHouse.Models.Familia

@{
    ViewBag.Title = "Editar";
}

<h2 style="text-align: center;">EDITAR</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row">
            <label for="codigo">Código da família:</label>
            <div class="w3-light-grey w3-padding-32 w3-center">
                <small id="codigo" name="Codigo" class="w3-jumbo">@Model.Codigo</small>
                @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control", @style = "visibility: hidden;" } })
            </div>
        </div>

        <hr />

        <div class="row">
            <div class="w3-container w3-light-grey">
                Contato
            </div>

            <div class="form-group col-md-5">
                <label for="email">E-mail:</label>
                <div>
                    @Html.EditorFor(model => model.Contato.Email, new { htmlAttributes = new { id = "email", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contato.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-2">
                <label for="ddd">DDD:</label>
                <div>
                    @Html.EditorFor(model => model.Contato.Telefone.DDD, new { htmlAttributes = new { id = "ddd", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contato.Telefone.DDD, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-3">
                <label for="numero">Número:</label>
                <div>
                    @Html.EditorFor(model => model.Contato.Telefone.Numero, new { htmlAttributes = new { id = "numero", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contato.Telefone.Numero, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-2">
                <label for="tipo-telefone">Tipo:</label>
                <div>
                    @Html.EnumDropDownListFor(model => model.Contato.Telefone.Tipo, new { htmlAttributes = new { id = "tipo-telefone", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contato.Telefone.Tipo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="w3-container w3-light-grey">
                Endereço
            </div>

            <div class="form-group col-md-5">
                <label for="cep">CEP:</label>
                <div>
                    @Html.EditorFor(model => model.Endereco.Cep, new { htmlAttributes = new { id = "cep", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Endereco.Cep, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-2">
                <label for="casa-numero">Número:</label>
                <div>
                    @Html.EditorFor(model => model.Endereco.Numero, new { htmlAttributes = new { id = "casa-numero", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Endereco.Numero, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="w3-container w3-light-grey">
                Não Dependentes
            </div>
            <small class="form-text text-muted">*Pessoas que possuem uma renda e morarão na mesma casa.</small>
            <div class="form-group">
                <div class="col-md-3">
                    <button class="btn btn-primary form-control" id="div-nao-dependentes">Novo não dependente</button>
                </div>
                <div class="col-md-12" id="div-nao-dependentes">
                    @for (int i = 0; i < Model.NaoDependentes.Count; i++)
                    {
                        <div class="row">
                            <div class="col-md-5">
                                @Html.HiddenFor(model => model.NaoDependentes[i].Id, new { @class = "hid-id" })
                                @Html.EditorFor(model => model.NaoDependentes[i].Nome, new { htmlAttributes = new { @class = "form-control text-nome" } })
                            </div>
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.NaoDependentes[i].CPF, new { htmlAttributes = new { @class = "form-control text-cpf" } })
                            </div>
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.NaoDependentes[i].Idade, new { @class = "form-control number-idade" })
                            </div>
                            <div class="col-md-1">
                                @Html.EditorFor(model => model.NaoDependentes[i].Renda, new { @class = "form-control checkbox-debilitado" })
                            </div>
                            <div class="col-md-1">
                                <button class="btn btn-danger btn-remover-dependente" data-id="@Model.NaoDependentes[i].Id">
                                    <span class="glyphicon glyphicon-trash"></span>
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="row">
            <div class="w3-container w3-light-grey">
                Dependentes
            </div>
            <small class="form-text text-muted">*Pessoas que <span style="color:red;">NÃO</span> possuem uma renda e morarão na mesma casa.</small>
            <div class="form-group">
                <div class="col-md-3">
                    <button class="btn btn-primary form-control" id="btn-add-dependentes">Novo telefone</button>
                </div>
                <div class="col-md-12" id="div-dependentes">
                    @for (int i = 0; i < Model.Dependentes.Count; i++)
                    {
                        <div class="row">
                            <div class="col-md-5">
                                @Html.HiddenFor(model => model.Dependentes[i].Id, new { @class = "hid-id" })
                                @Html.EditorFor(model => model.Dependentes[i].Nome, new { htmlAttributes = new { @class = "form-control text-nome" } })
                            </div>
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.Dependentes[i].CPF, new { htmlAttributes = new { @class = "form-control text-cpf" } })
                            </div>
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.Dependentes[i].Idade, new { @class = "form-control number-idade" })
                            </div>
                            <div class="col-md-1">
                                @Html.CheckBoxFor(model => model.Dependentes[i].Debilitado, new { @class = "form-control checkbox-debilitado" })
                            </div>
                            <div class="col-md-1">
                                <button class="btn btn-danger btn-remover-dependente" data-id="@Model.Dependentes[i].Id">
                                    <span class="glyphicon glyphicon-trash"></span>
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class=" col-md-10">
                @Html.ActionLink("Cancelar", "Index", "Familia", new object { }, new { @class = "btn btn-default" })
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Dependente/edição-dependente.js"></script>
    <script src="~/Scripts/NãoDependente/edição-nãodependente.js"></script>
    <script src="~/Scripts/Mask Plugin/jquery.mask.js"></script>
}
